{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/akhil/SoftwareApps/Meditate/client/SessionComponents/ActionButton.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SessionContext from \"../Contexts.jsx\";\nexport default function ActionButton() {\n  var _useContext = useContext(SessionContext),\n      inMeditation = _useContext.inMeditation,\n      setInMeditation = _useContext.setInMeditation,\n      time = _useContext.time,\n      setTime = _useContext.setTime,\n      inSession = _useContext.inSession,\n      setInSession = _useContext.setInSession;\n\n  var _useState = useState('#DBE3EC'),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonStyle = _useState2[0],\n      setButtonStyle = _useState2[1];\n\n  var sessionAction = function sessionAction() {\n    if (!inSession) {\n      setInSession(!inSession);\n      setInMeditation(!inMeditation);\n    } else {\n      setInMeditation(!inMeditation);\n    }\n  };\n\n  return React.createElement(View, {\n    style: style(inMeditation).container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: style(inMeditation).button,\n    onPress: sessionAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: style(inMeditation).text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, !inSession ? 'START' : inMeditation ? 'PAUSE' : 'RESUME')));\n}\n;\n\nvar style = function style(inMeditation) {\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      marginTop: '10%'\n    },\n    button: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100%',\n      height: 75,\n      borderWidth: 10,\n      borderRadius: 100,\n      borderColor: inMeditation ? '#ECE4DB' : '#ecdcdb'\n    },\n    text: {\n      margin: 10,\n      fontSize: 30,\n      fontWeight: '600',\n      color: '#787878'\n    }\n  });\n};","map":{"version":3,"sources":["/Users/akhil/SoftwareApps/Meditate/client/SessionComponents/ActionButton.jsx"],"names":["React","useState","useContext","useEffect","SessionContext","ActionButton","inMeditation","setInMeditation","time","setTime","inSession","setInSession","buttonStyle","setButtonStyle","sessionAction","style","container","button","text","StyleSheet","create","flex","marginTop","justifyContent","alignItems","width","height","borderWidth","borderRadius","borderColor","margin","fontSize","fontWeight","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;;;;;AAEA,OAAOC,cAAP;AAGA,eAAe,SAASC,YAAT,GAAwB;AACrC,oBAAkFH,UAAU,CAACE,cAAD,CAA5F;AAAA,MAAQE,YAAR,eAAQA,YAAR;AAAA,MAAsBC,eAAtB,eAAsBA,eAAtB;AAAA,MAAuCC,IAAvC,eAAuCA,IAAvC;AAAA,MAA6CC,OAA7C,eAA6CA,OAA7C;AAAA,MAAsDC,SAAtD,eAAsDA,SAAtD;AAAA,MAAiEC,YAAjE,eAAiEA,YAAjE;;AACA,kBAAsCV,QAAQ,CAAC,SAAD,CAA9C;AAAA;AAAA,MAAOW,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAI,CAACJ,SAAL,EAAgB;AACdC,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAH,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,KAHD,MAGO;AACLC,MAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD;AACF,GAPD;;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAES,KAAK,CAACT,YAAD,CAAL,CAAoBU,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAED,KAAK,CAACT,YAAD,CAAL,CAAoBW,MAA7C;AAAqD,IAAA,OAAO,EAAEH,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,KAAK,CAACT,YAAD,CAAL,CAAoBY,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACR,SAAD,GAAa,OAAb,GAAuBJ,YAAY,GAAG,OAAH,GAAa,QADnD,CADF,CADF,CADF;AASD;AAAA;;AAED,IAAMS,KAAK,GAAG,SAARA,KAAQ,CAACT,YAAD;AAAA,SAAkBa,UAAU,CAACC,MAAX,CAAkB;AAChDJ,IAAAA,SAAS,EAAE;AACTK,MAAAA,IAAI,EAAE,CADG;AAETC,MAAAA,SAAS,EAAE;AAFF,KADqC;AAKhDL,IAAAA,MAAM,EAAE;AACNM,MAAAA,cAAc,EAAE,QADV;AAENC,MAAAA,UAAU,EAAE,QAFN;AAGNC,MAAAA,KAAK,EAAE,MAHD;AAINC,MAAAA,MAAM,EAAE,EAJF;AAKNC,MAAAA,WAAW,EAAE,EALP;AAMNC,MAAAA,YAAY,EAAE,GANR;AAONC,MAAAA,WAAW,EAAEvB,YAAY,GAAG,SAAH,GAAe;AAPlC,KALwC;AAchDY,IAAAA,IAAI,EAAE;AACJY,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,UAAU,EAAE,KAHR;AAIJC,MAAAA,KAAK,EAAE;AAJH;AAd0C,GAAlB,CAAlB;AAAA,CAAd","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport SessionContext from '../Contexts.jsx';\n\n\nexport default function ActionButton() {\n  const { inMeditation, setInMeditation, time, setTime, inSession, setInSession } = useContext(SessionContext);\n  const [buttonStyle, setButtonStyle] = useState('#DBE3EC');\n\n  const sessionAction = () => {\n    if (!inSession) {\n      setInSession(!inSession);\n      setInMeditation(!inMeditation)\n    } else {\n      setInMeditation(!inMeditation);\n    }\n  };\n\n\n  return (\n    <View style={style(inMeditation).container}>\n      <TouchableOpacity style={style(inMeditation).button} onPress={sessionAction}>\n        <Text style={style(inMeditation).text}>\n          {!inSession ? 'START' : inMeditation ? 'PAUSE' : 'RESUME'}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  )\n};\n\nconst style = (inMeditation) => StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: '10%',\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: 75,\n    borderWidth: 10,\n    borderRadius: 100,\n    borderColor: inMeditation ? '#ECE4DB' : '#ecdcdb',\n  },\n  text: {\n    margin: 10,\n    fontSize: 30,\n    fontWeight: '600',\n    color: '#787878',\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}