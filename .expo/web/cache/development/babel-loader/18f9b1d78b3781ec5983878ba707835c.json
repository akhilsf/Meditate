{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/akhil/SoftwareApps/Meditate/client/pages/settings/TimeSelect.jsx\";\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SessionContext from \"../../Contexts.jsx\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(SessionContext),\n      time = _useContext.time,\n      setTime = _useContext.setTime;\n\n  var _useState = useState(new Date(1598051730000)),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var onChange = function onChange(event, selectedTime) {\n    setTime(selectedTime);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.back,\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \" \\u2039 Back \"), React.createElement(DateTimePicker, {\n    value: date,\n    mode: \"date\",\n    display: \"default\",\n    onChange: onChange,\n    style: {\n      width: 320,\n      backgroundColor: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: '#787878',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(255, 229, 217, 0.33)'\n  },\n  timeSelector: {\n    width: '320',\n    backgroundColor: '#787878',\n    fontSize: 43\n  },\n  back: {\n    position: 'absolute',\n    color: '#787878',\n    top: '8%',\n    left: '5%',\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["/Users/akhil/SoftwareApps/Meditate/client/pages/settings/TimeSelect.jsx"],"names":["React","useState","useContext","useEffect","NavigationContainer","DateTimePicker","createNativeStackNavigator","SessionContext","navigation","time","setTime","Date","date","setDate","onChange","event","selectedTime","styles","container","back","navigate","width","backgroundColor","StyleSheet","create","flex","color","alignItems","justifyContent","timeSelector","fontSize","position","top","left"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,cAAP;AAGA,gBAAe,gBAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACjC,oBAEIN,UAAU,CAACK,cAAD,CAFd;AAAA,MACEE,IADF,eACEA,IADF;AAAA,MACQC,OADR,eACQA,OADR;;AAIA,kBAAwBT,QAAQ,CAAC,IAAIU,IAAJ,CAAS,aAAT,CAAD,CAAhC;AAAA;AAAA,MAAOC,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,YAAR,EAAyB;AACxCN,IAAAA,OAAO,CAACM,YAAD,CAAP;AACD,GAFD;;AAIA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAED,MAAM,CAACE,IADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMX,UAAU,CAACY,QAAX,CAAoB,MAApB,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAKE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAER,IADT;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,OAAO,EAAC,SAHV;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAKE,IAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EAAE,GADF;AAELC,MAAAA,eAAe,EAAE;AAFZ,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAkBD,CA7BD;AA+BA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE,SAFE;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTN,IAAAA,eAAe,EAAE;AALR,GADoB;AAQ/BO,EAAAA,YAAY,EAAE;AACZR,IAAAA,KAAK,EAAE,KADK;AAEZC,IAAAA,eAAe,EAAE,SAFL;AAGZQ,IAAAA,QAAQ,EAAE;AAHE,GARiB;AAa/BX,EAAAA,IAAI,EAAE;AACJY,IAAAA,QAAQ,EAAE,UADN;AAEJL,IAAAA,KAAK,EAAE,SAFH;AAGJM,IAAAA,GAAG,EAAE,IAHD;AAIJC,IAAAA,IAAI,EAAE,IAJF;AAKJH,IAAAA,QAAQ,EAAE;AALN;AAbyB,CAAlB,CAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SessionContext from '../../Contexts.jsx';\n\n\nexport default ({ navigation }) => {\n  const {\n    time, setTime,\n  } = useContext(SessionContext);\n\n  const [date, setDate] = useState(new Date(1598051730000));\n\n  const onChange = (event, selectedTime) => {\n    setTime(selectedTime);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text\n        style={styles.back}\n        onPress={() => navigation.navigate('Home')}\n      > &#x2039; Back </Text>\n      <DateTimePicker\n        value={date}\n        mode=\"date\"\n        display=\"default\"\n        onChange={onChange}\n        style={{\n          width: 320,\n          backgroundColor: \"white\"\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: '#787878',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(255, 229, 217, 0.33)',\n  },\n  timeSelector: {\n    width: '320',\n    backgroundColor: '#787878',\n    fontSize: 43,\n  },\n  back: {\n    position: 'absolute',\n    color: '#787878',\n    top: '8%',\n    left: '5%',\n    fontSize: 18,\n  }\n});"]},"metadata":{},"sourceType":"module"}