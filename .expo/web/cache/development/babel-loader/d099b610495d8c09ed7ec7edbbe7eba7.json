{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/akhil/SoftwareApps/Meditate/client/pages/settings/TimeSelect.jsx\";\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SessionContext from \"../../Contexts.jsx\";\nexport default (function (_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(SessionContext),\n      time = _useContext.time,\n      setTime = _useContext.setTime;\n\n  var _useState = useState(new Date(1970, 0, 1).setSeconds(time)),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var onChange = function onChange(event, selectedTime) {\n    var time = selectedTime.getMinutes();\n    setDate(selectedTime);\n  };\n\n  var saveTime = function saveTime() {\n    setTime(date / 60);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.back,\n    onPress: function onPress() {\n      return navigation.navigate('Home');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \" \\u2039 Back \"), React.createElement(DateTimePicker, {\n    value: date,\n    mode: \"countdown\",\n    display: \"default\",\n    onChange: onChange,\n    style: styles.timeSelector,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: saveTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.actionText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"SAVE\")));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: '#787878',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#f6ede9'\n  },\n  timeSelector: {\n    width: '95%',\n    backgroundColor: '#f6ede9'\n  },\n  back: {\n    position: 'absolute',\n    color: '#787878',\n    top: '8%',\n    left: '5%',\n    fontSize: 18\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: 75,\n    borderWidth: 10,\n    borderRadius: 100,\n    borderColor: '#ECE4DB'\n  },\n  actionText: {\n    margin: 10,\n    fontSize: 30,\n    fontWeight: '600',\n    color: '#787878'\n  }\n});","map":{"version":3,"sources":["/Users/akhil/SoftwareApps/Meditate/client/pages/settings/TimeSelect.jsx"],"names":["React","useState","useContext","useEffect","NavigationContainer","DateTimePicker","createNativeStackNavigator","SessionContext","navigation","time","setTime","Date","setSeconds","date","setDate","onChange","event","selectedTime","getMinutes","saveTime","styles","container","back","navigate","timeSelector","button","actionText","StyleSheet","create","flex","color","alignItems","justifyContent","backgroundColor","width","position","top","left","fontSize","height","borderWidth","borderRadius","borderColor","margin","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button, TouchableOpacity } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SessionContext from '../../Contexts.jsx';\n\n\nexport default ({ navigation }) => {\n  const {\n    time, setTime,\n  } = useContext(SessionContext);\n\n  const [date, setDate] = useState(new Date(1970, 0, 1).setSeconds(time));\n\n  const onChange = (event, selectedTime) => {\n    let time = selectedTime.getMinutes();\n    setDate(selectedTime);\n  };\n\n  const saveTime = () => {\n    setTime(date / 60);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text\n        style={styles.back}\n        onPress={() => navigation.navigate('Home')}\n      > &#x2039; Back </Text>\n      <DateTimePicker\n        value={date}\n        // isVisibile={true}\n        mode=\"countdown\"\n        display=\"default\"\n        onChange={onChange}\n        style={styles.timeSelector}\n      />\n      <TouchableOpacity style={styles.button} onPress={saveTime}>\n        <Text style={styles.actionText}>\n          SAVE\n          </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: '#787878',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#f6ede9',\n  },\n  timeSelector: {\n    width: '95%',\n    backgroundColor: '#f6ede9',\n  },\n  back: {\n    position: 'absolute',\n    color: '#787878',\n    top: '8%',\n    left: '5%',\n    fontSize: 18,\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: 75,\n    borderWidth: 10,\n    borderRadius: 100,\n    borderColor: '#ECE4DB',\n  },\n  actionText: {\n    margin: 10,\n    fontSize: 30,\n    fontWeight: '600',\n    color: '#787878',\n  },\n});"]},"metadata":{},"sourceType":"module"}