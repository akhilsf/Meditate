{"ast":null,"code":"import React from 'react';\nimport Sound from 'react-native-sound';\nexport default SoundPlayer = function SoundPlayer() {\n  Sound.setCategory('Playback');\n  var Ambiance = new Sound('../../assets/sounds/ambiance/rain.mp3', Sound.MAIN_BUNDLE, function (error) {\n    if (error) {\n      console.log('failed to load the sound', error);\n      return;\n    }\n\n    console.log('duration in seconds: ' + Ambiance.getDuration() + 'number of channels: ' + Ambiance.getNumberOfChannels());\n    Ambiance.play(function (success) {\n      success ? console.log('successfully finished playing') : console.log('playback failed to audio decoding errors');\n    });\n  });\n  Ambiance.setNumberOfLoops(-1);\n  Ambiance.release();\n};","map":{"version":3,"sources":["/Users/akhil/SoftwareApps/Meditate/client/SessionComponents/SoundPlayer.jsx"],"names":["React","Sound","SoundPlayer","setCategory","Ambiance","MAIN_BUNDLE","error","console","log","getDuration","getNumberOfChannels","play","success","setNumberOfLoops","release"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAeC,WAAW,GAAG,uBAAM;AACjCD,EAAAA,KAAK,CAACE,WAAN,CAAkB,UAAlB;AAEA,MAAIC,QAAQ,GAAG,IAAIH,KAAJ,CAAU,uCAAV,EAAmDA,KAAK,CAACI,WAAzD,EAAsE,UAACC,KAAD,EAAW;AAC9F,QAAIA,KAAJ,EAAW;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAxC;AACA;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BJ,QAAQ,CAACK,WAAT,EAA1B,GAAmD,sBAAnD,GAA4EL,QAAQ,CAACM,mBAAT,EAAxF;AAEAN,IAAAA,QAAQ,CAACO,IAAT,CAAc,UAACC,OAAD,EAAa;AACzBA,MAAAA,OAAO,GACLL,OAAO,CAACC,GAAR,CAAY,+BAAZ,CADK,GAELD,OAAO,CAACC,GAAR,CAAY,0CAAZ,CAFF;AAGD,KAJD;AAKD,GAbc,CAAf;AAeAJ,EAAAA,QAAQ,CAACS,gBAAT,CAA0B,CAAC,CAA3B;AACAT,EAAAA,QAAQ,CAACU,OAAT;AACD,CApBD","sourcesContent":["import React from 'react';\nimport Sound from 'react-native-sound';\n\nexport default SoundPlayer = () => {\n  Sound.setCategory('Playback');\n\n  var Ambiance = new Sound('../../assets/sounds/ambiance/rain.mp3', Sound.MAIN_BUNDLE, (error) => {\n    if (error) {\n      console.log('failed to load the sound', error);\n      return;\n    }\n\n    console.log('duration in seconds: ' + Ambiance.getDuration() + 'number of channels: ' + Ambiance.getNumberOfChannels());\n\n    Ambiance.play((success) => {\n      success ?\n        console.log('successfully finished playing') :\n        console.log('playback failed to audio decoding errors');\n    })\n  })\n\n  Ambiance.setNumberOfLoops(-1);\n  Ambiance.release();\n}\n\n"]},"metadata":{},"sourceType":"module"}