{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/akhil/SoftwareApps/Meditate/client/App.js\";\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SessionContext from \"./Contexts.jsx\";\nimport HomePage from \"./pages/HomePage/HomePage.jsx\";\nimport TimeSelect from \"./pages/settings/TimeSelect.jsx\";\nvar Stack = createNativeStackNavigator();\nexport default (function () {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      inSession = _useState2[0],\n      setSession = _useState2[1];\n\n  var _useState3 = useState(600),\n      _useState4 = _slicedToArray(_useState3, 2),\n      time = _useState4[0],\n      setTime = _useState4[1];\n\n  var value = {\n    inSession: inSession,\n    setSession: setSession,\n    time: time,\n    setTime: setTime\n  };\n  return React.createElement(SessionContext.Provider, {\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {},\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomePage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"TimeSelect\",\n    component: TimeSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }))));\n});","map":{"version":3,"sources":["/Users/akhil/SoftwareApps/Meditate/client/App.js"],"names":["StatusBar","React","useState","NavigationContainer","createNativeStackNavigator","SessionContext","HomePage","TimeSelect","Stack","inSession","setSession","time","setTime","value"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;;;;AAEA,OAAOC,cAAP;AACA,OAAOC,QAAP;AACA,OAAOC,UAAP;AAEA,IAAMC,KAAK,GAAGJ,0BAA0B,EAAxC;AAEA,gBAAe,YAAM;AACnB,kBAAgCF,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBR,QAAQ,CAAC,GAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,MAAMC,KAAK,GAAG;AAAEJ,IAAAA,SAAS,EAATA,SAAF;AAAaC,IAAAA,UAAU,EAAVA,UAAb;AAAyBC,IAAAA,IAAI,EAAJA,IAAzB;AAA+BC,IAAAA,OAAO,EAAPA;AAA/B,GAAd;AAEA,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE,EADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAEP,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EASE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAEC,UAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF,CADF;AAoBD,CAzBD","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { StyleSheet, Text, View } from 'react-native';\nimport SessionContext from './Contexts.jsx'\nimport HomePage from './pages/HomePage/HomePage.jsx';\nimport TimeSelect from './pages/settings/TimeSelect.jsx';\n\nconst Stack = createNativeStackNavigator();\n\nexport default () => {\n  const [inSession, setSession] = useState(false);\n  const [time, setTime] = useState(600);\n  const value = { inSession, setSession, time, setTime };\n\n  return (\n    <SessionContext.Provider value={value}>\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={{\n            // headerShown: false\n          }}\n        >\n          <Stack.Screen\n            name='Home'\n            component={HomePage}\n          />\n          <Stack.Screen\n            name='TimeSelect'\n            component={TimeSelect}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </SessionContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}