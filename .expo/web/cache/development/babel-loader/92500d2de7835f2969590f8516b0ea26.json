{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nvar FACTORIAL_3 = 3 * 2;\nvar FACTORIAL_5 = 5 * 4 * FACTORIAL_3;\nvar FACTORIAL_7 = 7 * 6 * FACTORIAL_5;\n\nfunction sin(animated) {\n  var normalized = normalize(animated);\n  var square = Animated.multiply(normalized, normalized);\n  var pow3 = Animated.multiply(normalized, square);\n  var pow5 = Animated.multiply(pow3, square);\n  var pow7 = Animated.multiply(pow5, square);\n  return Animated.add(Animated.add(normalized, Animated.multiply(pow3, -1 / FACTORIAL_3)), Animated.add(Animated.multiply(pow5, 1 / FACTORIAL_5), Animated.multiply(pow7, -1 / FACTORIAL_7)));\n}\n\nfunction normalize(animated) {\n  return Animated.add(Animated.modulo(Animated.add(animated, Math.PI), Math.PI * 2), -Math.PI).interpolate({\n    inputRange: [-Math.PI, -Math.PI / 2, Math.PI / 2, Math.PI],\n    outputRange: [0, -Math.PI / 2, Math.PI / 2, 0]\n  });\n}\n\nexport { sin, normalize };","map":{"version":3,"sources":["AnimatedMath.tsx"],"names":["FACTORIAL_3","FACTORIAL_5","FACTORIAL_7","normalized","normalize","square","Animated","pow3","pow5","pow7","Math","inputRange","outputRange"],"mappings":";AAEA,IAAMA,WAAW,GAAG,IAApB,CAAA;AACA,IAAMC,WAAW,GAAG,IAAA,CAAA,GAApB,WAAA;AACA,IAAMC,WAAW,GAAG,IAAA,CAAA,GAApB,WAAA;;AAEA,SAAA,GAAA,CAAA,QAAA,EAA0C;AACxC,MAAMC,UAAU,GAAGC,SAAS,CAA5B,QAA4B,CAA5B;AACA,MAAMC,MAAM,GAAGC,QAAQ,CAARA,QAAAA,CAAAA,UAAAA,EAAf,UAAeA,CAAf;AACA,MAAMC,IAAI,GAAGD,QAAQ,CAARA,QAAAA,CAAAA,UAAAA,EAAb,MAAaA,CAAb;AACA,MAAME,IAAI,GAAGF,QAAQ,CAARA,QAAAA,CAAAA,IAAAA,EAAb,MAAaA,CAAb;AACA,MAAMG,IAAI,GAAGH,QAAQ,CAARA,QAAAA,CAAAA,IAAAA,EAAb,MAAaA,CAAb;AAEA,SAAOA,QAAQ,CAARA,GAAAA,CACLA,QAAQ,CAARA,GAAAA,CAAAA,UAAAA,EAAyBA,QAAQ,CAARA,QAAAA,CAAAA,IAAAA,EAAwB,CAAA,CAAA,GAD5CA,WACoBA,CAAzBA,CADKA,EAELA,QAAQ,CAARA,GAAAA,CACEA,QAAQ,CAARA,QAAAA,CAAAA,IAAAA,EAAwB,IAD1BA,WACEA,CADFA,EAEEA,QAAQ,CAARA,QAAAA,CAAAA,IAAAA,EAAwB,CAAA,CAAA,GAJ5B,WAIIA,CAFFA,CAFKA,CAAP;AAOD;;AAED,SAAA,SAAA,CAAA,QAAA,EAAmE;AACjE,SAAO,QAAQ,CAAR,GAAA,CACLA,QAAQ,CAARA,MAAAA,CAAgBA,QAAQ,CAARA,GAAAA,CAAAA,QAAAA,EAAuBI,IAAI,CAA3CJ,EAAgBA,CAAhBA,EAAiDI,IAAI,CAAJA,EAAAA,GAD5C,CACLJ,CADK,EAEL,CAACI,IAAI,CAFA,EAAA,EAAA,WAAA,CAGO;AACZC,IAAAA,UAAU,EAAE,CAAC,CAACD,IAAI,CAAN,EAAA,EAAW,CAACA,IAAI,CAAL,EAAA,GAAX,CAAA,EAAyBA,IAAI,CAAJA,EAAAA,GAAzB,CAAA,EAAsCA,IAAI,CAD1C,EACA,CADA;AAEZE,IAAAA,WAAW,EAAE,CAAA,CAAA,EAAI,CAACF,IAAI,CAAL,EAAA,GAAJ,CAAA,EAAkBA,IAAI,CAAJA,EAAAA,GAAlB,CAAA,EAAA,CAAA;AAFD,GAHP,CAAP;AAOD;;AAED,SAAA,GAAA,EAAA,SAAA","sourcesContent":["import { Animated } from 'react-native';\n\nconst FACTORIAL_3 = 3 * 2;\nconst FACTORIAL_5 = 5 * 4 * FACTORIAL_3;\nconst FACTORIAL_7 = 7 * 6 * FACTORIAL_5;\n\nfunction sin(animated: Animated.Animated) {\n  const normalized = normalize(animated);\n  const square = Animated.multiply(normalized, normalized);\n  const pow3 = Animated.multiply(normalized, square);\n  const pow5 = Animated.multiply(pow3, square);\n  const pow7 = Animated.multiply(pow5, square);\n\n  return Animated.add(\n    Animated.add(normalized, Animated.multiply(pow3, -1 / FACTORIAL_3)),\n    Animated.add(\n      Animated.multiply(pow5, 1 / FACTORIAL_5),\n      Animated.multiply(pow7, -1 / FACTORIAL_7)\n    )\n  );\n}\n\nfunction normalize(animated: Animated.Animated): Animated.Animated {\n  return Animated.add(\n    Animated.modulo(Animated.add(animated, Math.PI), Math.PI * 2),\n    -Math.PI\n  ).interpolate({\n    inputRange: [-Math.PI, -Math.PI / 2, Math.PI / 2, Math.PI],\n    outputRange: [0, -Math.PI / 2, Math.PI / 2, 0],\n  });\n}\n\nexport { sin, normalize };\n"]},"metadata":{},"sourceType":"module"}