{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/akhil/SoftwareApps/Meditate/client/pages/settings/TimeSelect.jsx\";\n\nimport React, { useState, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nvar MILLISECONDS_PER_MINUTE = 60 * 1000;\nvar MILLISECONDS_PER_HOUR = 60 * 60 * 1000;\nvar MILLISECONDS_PER_DAY = 24 * MILLISECONDS_PER_HOUR;\nexport default (function () {\n  var _useState = useState(Date.now() % MILLISECONDS_PER_DAY),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeValue = _useState2[0],\n      setTimeValue = _useState2[1];\n\n  var _useMemo = useMemo(function () {\n    return [Math.floor(timeValue / MILLISECONDS_PER_HOUR), Math.floor(timeValue % MILLISECONDS_PER_HOUR / MILLISECONDS_PER_MINUTE), Math.floor(timeValue % MILLISECONDS_PER_MINUTE / 1000)];\n  }, [timeValue]),\n      _useMemo2 = _slicedToArray(_useMemo, 2),\n      hour = _useMemo2[0],\n      min = _useMemo2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.timeValue,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"\" + (hour < 10 ? '0' : '') + hour + \":\" + (min < 10 ? '0' : '') + min));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: '#787878',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(255, 229, 217, 0.33)'\n  },\n  timeValue: {\n    marginVertical: 40,\n    color: '#787878',\n    fontSize: 43\n  }\n});","map":{"version":3,"sources":["/Users/akhil/SoftwareApps/Meditate/client/pages/settings/TimeSelect.jsx"],"names":["React","useState","useMemo","NavigationContainer","createNativeStackNavigator","MILLISECONDS_PER_MINUTE","MILLISECONDS_PER_HOUR","MILLISECONDS_PER_DAY","Date","now","timeValue","setTimeValue","Math","floor","hour","min","styles","container","StyleSheet","create","flex","color","alignItems","justifyContent","backgroundColor","marginVertical","fontSize"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAGA,IAAMC,uBAAuB,GAAG,KAAK,IAArC;AACA,IAAMC,qBAAqB,GAAG,KAAK,EAAL,GAAU,IAAxC;AACA,IAAMC,oBAAoB,GAAG,KAAKD,qBAAlC;AAEA,gBAAe,YAAM;AACnB,kBAAkCL,QAAQ,CAACO,IAAI,CAACC,GAAL,KAAaF,oBAAd,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AACA,iBAAoBT,OAAO,CAAC,YAAM;AAChC,WAAO,CACLU,IAAI,CAACC,KAAL,CAAWH,SAAS,GAAGJ,qBAAvB,CADK,EAELM,IAAI,CAACC,KAAL,CAAYH,SAAS,GAAGJ,qBAAb,GAAsCD,uBAAjD,CAFK,EAGLO,IAAI,CAACC,KAAL,CAAYH,SAAS,GAAGL,uBAAb,GAAwC,IAAnD,CAHK,CAAP;AAKD,GAN0B,EAMxB,CAACK,SAAD,CANwB,CAA3B;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,GAAb;;AAQA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAID,MAAM,CAACN,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACMI,IAAI,GAAG,EAAP,GAAY,GAAZ,GAAkB,EADxB,IAC6BA,IAD7B,UACqCC,GAAG,GAAG,EAAN,GAAW,GAAX,GAAiB,EADtD,IAC2DA,GAD3D,CADF,CADF;AAOD,CAjBD;AAmBA,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE,SAFE;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,eAAe,EAAE;AALR,GADoB;AAQ/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,cAAc,EAAE,EADP;AAETJ,IAAAA,KAAK,EAAE,SAFE;AAGTK,IAAAA,QAAQ,EAAE;AAHD;AARoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\n\nconst MILLISECONDS_PER_MINUTE = 60 * 1000;\nconst MILLISECONDS_PER_HOUR = 60 * 60 * 1000;\nconst MILLISECONDS_PER_DAY = 24 * MILLISECONDS_PER_HOUR;\n\nexport default () => {\n  const [timeValue, setTimeValue] = useState(Date.now() % MILLISECONDS_PER_DAY);\n  const [hour, min] = useMemo(() => {\n    return [\n      Math.floor(timeValue / MILLISECONDS_PER_HOUR),\n      Math.floor((timeValue % MILLISECONDS_PER_HOUR) / MILLISECONDS_PER_MINUTE),\n      Math.floor((timeValue % MILLISECONDS_PER_MINUTE) / 1000),\n    ];\n  }, [timeValue]);\n\n  return (\n    <View style={styles.container}>\n      <Text style = {styles.timeValue}>\n        {`${hour < 10 ? '0' : ''}${hour}:${min < 10 ? '0' : ''}${min}`}\n      </Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: '#787878',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(255, 229, 217, 0.33)',\n  },\n  timeValue: {\n    marginVertical: 40,\n    color: '#787878',\n    fontSize: 43,\n  },\n});"]},"metadata":{},"sourceType":"module"}