{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/akhil/SoftwareApps/Meditate/client/SessionComponents/ActionButton.jsx\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SessionContext from \"../Contexts.jsx\";\nexport default function ActionButton() {\n  var _useContext = useContext(SessionContext),\n      inSession = _useContext.inSession,\n      setSession = _useContext.setSession,\n      time = _useContext.time,\n      setTime = _useContext.setTime;\n\n  var _useState = useState('#DBE3EC'),\n      _useState2 = _slicedToArray(_useState, 2),\n      buttonStyle = _useState2[0],\n      setButtonStyle = _useState2[1];\n\n  var sessionAction = function sessionAction() {\n    setSession(!inSession);\n  };\n\n  return React.createElement(View, {\n    style: (style.container, {\n      borderColor: inSession ? '#ECE4DB' : '#DBE3EC'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: style.button,\n    onPress: sessionAction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: style.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, inSession ? 'PAUSE' : 'START')));\n}\n;\nvar style = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: '10%',\n    width: '80%'\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 75,\n    borderWidth: 10,\n    borderRadius: 100\n  },\n  text: {\n    fontSize: 30,\n    fontWeight: '600',\n    color: '#787878'\n  }\n});","map":{"version":3,"sources":["/Users/akhil/SoftwareApps/Meditate/client/SessionComponents/ActionButton.jsx"],"names":["React","useState","useContext","useEffect","SessionContext","ActionButton","inSession","setSession","time","setTime","buttonStyle","setButtonStyle","sessionAction","style","container","borderColor","button","text","StyleSheet","create","flex","marginTop","width","justifyContent","alignItems","height","borderWidth","borderRadius","fontSize","fontWeight","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;;;;;AAEA,OAAOC,cAAP;AAGA,eAAe,SAASC,YAAT,GAAwB;AACrC,oBAAiDH,UAAU,CAACE,cAAD,CAA3D;AAAA,MAAQE,SAAR,eAAQA,SAAR;AAAA,MAAmBC,UAAnB,eAAmBA,UAAnB;AAAA,MAA+BC,IAA/B,eAA+BA,IAA/B;AAAA,MAAqCC,OAArC,eAAqCA,OAArC;;AACA,kBAAsCR,QAAQ,CAAC,SAAD,CAA9C;AAAA;AAAA,MAAOS,WAAP;AAAA,MAAoBC,cAApB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BL,IAAAA,UAAU,CAAC,CAACD,SAAF,CAAV;AACD,GAFD;;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,GAAEO,KAAK,CAACC,SAAN,EAAiB;AAC5BC,MAAAA,WAAW,EAAET,SAAS,GAAG,SAAH,GAAe;AADT,KAAnB,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEO,KAAK,CAACG,MAA/B;AAAuC,IAAA,OAAO,EAAEJ,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,KAAK,CAACI,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SAAS,GAAG,OAAH,GAAa,OADzB,CADF,CAHF,CADF;AAWD;AAAA;AAED,IAAMO,KAAK,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC9BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,SAAS,EAAE,KAFF;AAGTC,IAAAA,KAAK,EAAE;AAHE,GADmB;AAM9BN,EAAAA,MAAM,EAAE;AACNO,IAAAA,cAAc,EAAE,QADV;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,WAAW,EAAE,EAJP;AAKNC,IAAAA,YAAY,EAAE;AALR,GANsB;AAa9BV,EAAAA,IAAI,EAAE;AACJW,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,UAAU,EAAE,KAFR;AAGJC,IAAAA,KAAK,EAAE;AAHH;AAbwB,CAAlB,CAAd","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport SessionContext from '../Contexts.jsx';\n\n\nexport default function ActionButton() {\n  const { inSession, setSession, time, setTime } = useContext(SessionContext);\n  const [buttonStyle, setButtonStyle] = useState('#DBE3EC');\n\n  const sessionAction = () => {\n    setSession(!inSession);\n  };\n\n\n  return (\n    <View style={style.container, {\n      borderColor: inSession ? '#ECE4DB' : '#DBE3EC'\n    }}>\n      <TouchableOpacity style={style.button} onPress={sessionAction}>\n        <Text style={style.text}>\n          {inSession ? 'PAUSE' : 'START'}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  )\n};\n\nconst style = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: '10%',\n    width: '80%',\n  },\n  button: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 75,\n    borderWidth: 10,\n    borderRadius: 100,\n  },\n  text: {\n    fontSize: 30,\n    fontWeight: '600',\n    color: '#787878',\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}