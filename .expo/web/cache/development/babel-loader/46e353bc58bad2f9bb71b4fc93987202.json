{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/akhil/SoftwareApps/Meditate/client/pages/settings/TimeSelect.jsx\";\n\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SessionContext from \"../../Contexts.jsx\";\nvar MILLISECONDS_PER_MINUTE = 60 * 1000;\nvar MILLISECONDS_PER_HOUR = 60 * 60 * 1000;\nvar MILLISECONDS_PER_DAY = 24 * MILLISECONDS_PER_HOUR;\nexport default (function () {\n  var _useContext = useContext(SessionContext),\n      time = _useContext.time,\n      setTime = _useContext.setTime;\n\n  var _useState = useState(time),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValue = _useState2[0],\n      setSelectedValue = _useState2[1];\n\n  var zeroToSixty = [];\n\n  var pushArray = function () {\n    for (var i = 0; i < 60; i++) {\n      zeroToSixty.push(i);\n    }\n  }();\n\n  console.log(zeroToSixty);\n\n  var timeConvert = function timeConvert() {\n    var minutes = Math.floor(time / 60);\n    var seconds = time % 60;\n\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n\n    return [minutes, seconds];\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(Picker, {\n    selectedValue: selectedValue,\n    style: {\n      height: 50,\n      width: 150\n    },\n    onValueChange: function onValueChange(itemValue, itemIndex) {\n      return setSelectedValue(itemValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: '#787878',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(255, 229, 217, 0.33)'\n  },\n  timeValue: {\n    marginVertical: 40,\n    color: '#787878',\n    fontSize: 43\n  }\n});","map":{"version":3,"sources":["/Users/akhil/SoftwareApps/Meditate/client/pages/settings/TimeSelect.jsx"],"names":["React","useState","useContext","NavigationContainer","createNativeStackNavigator","SessionContext","MILLISECONDS_PER_MINUTE","MILLISECONDS_PER_HOUR","MILLISECONDS_PER_DAY","time","setTime","selectedValue","setSelectedValue","zeroToSixty","pushArray","i","push","console","log","timeConvert","minutes","Math","floor","seconds","styles","container","height","width","itemValue","itemIndex","StyleSheet","create","flex","color","alignItems","justifyContent","backgroundColor","timeValue","marginVertical","fontSize"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,cAAP;AAEA,IAAMC,uBAAuB,GAAG,KAAK,IAArC;AACA,IAAMC,qBAAqB,GAAG,KAAK,EAAL,GAAU,IAAxC;AACA,IAAMC,oBAAoB,GAAG,KAAKD,qBAAlC;AAEA,gBAAe,YAAM;AACnB,oBAEIL,UAAU,CAACG,cAAD,CAFd;AAAA,MACEI,IADF,eACEA,IADF;AAAA,MACQC,OADR,eACQA,OADR;;AAIA,kBAA0CT,QAAQ,CAACQ,IAAD,CAAlD;AAAA;AAAA,MAAOE,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,WAAW,GAAG,EAApB;;AACA,MAAMC,SAAS,GAAI,YAAM;AACvB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BF,MAAAA,WAAW,CAACG,IAAZ,CAAiBD,CAAjB;AACD;AACF,GAJiB,EAAlB;;AAMAE,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;;AAEA,MAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWb,IAAI,GAAG,EAAlB,CAAd;AACA,QAAIc,OAAO,GAAGd,IAAI,GAAG,EAArB;;AAEA,QAAIW,OAAO,GAAG,EAAd,EAAkB;AAChBA,MAAAA,OAAO,SAAOA,OAAd;AACD;;AAED,QAAIG,OAAO,GAAG,EAAd,EAAkB;AAChBA,MAAAA,OAAO,SAAOA,OAAd;AACD;;AAED,WAAO,CAACH,OAAD,EAAUG,OAAV,CAAP;AACD,GAbD;;AAgBA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEd,aADjB;AAEE,IAAA,KAAK,EAAE;AAACe,MAAAA,MAAM,EAAE,EAAT;AAAaC,MAAAA,KAAK,EAAE;AAApB,KAFT;AAGE,IAAA,aAAa,EAAE,uBAACC,SAAD,EAAYC,SAAZ;AAAA,aAA0BjB,gBAAgB,CAACgB,SAAD,CAA1C;AAAA,KAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAcD,CA9CD;AAgDA,IAAMJ,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,KAAK,EAAE,SAFE;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTC,IAAAA,eAAe,EAAE;AALR,GADoB;AAQ/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,EADP;AAETL,IAAAA,KAAK,EAAE,SAFE;AAGTM,IAAAA,QAAQ,EAAE;AAHD;AARoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { StyleSheet, Text, View, Picker } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport SessionContext from '../../Contexts.jsx';\n\nconst MILLISECONDS_PER_MINUTE = 60 * 1000;\nconst MILLISECONDS_PER_HOUR = 60 * 60 * 1000;\nconst MILLISECONDS_PER_DAY = 24 * MILLISECONDS_PER_HOUR;\n\nexport default () => {\n  const {\n    time, setTime,\n  } = useContext(SessionContext);\n\n  const [selectedValue, setSelectedValue] = useState(time)\n\n  const zeroToSixty = [];\n  const pushArray = (() => {\n    for (let i = 0; i < 60; i++) {\n      zeroToSixty.push(i);\n    }\n  })();\n\n  console.log(zeroToSixty);\n\n  const timeConvert = () => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time % 60;\n\n    if (minutes < 10) {\n      minutes = `0${minutes}`;\n    }\n\n    if (seconds < 10) {\n      seconds = `0${seconds}`;\n    }\n\n    return [minutes, seconds];\n  }\n\n\n  return (\n    <View style={styles.container}>\n      <Picker\n        selectedValue={selectedValue}\n        style={{height: 50, width: 150}}\n        onValueChange={(itemValue, itemIndex) => setSelectedValue(itemValue)}\n      >\n        {}\n      </Picker>\n      {/* <Text style = {styles.timeValue}>\n        {`${hour < 10 ? '0' : ''}${hour}:${min < 10 ? '0' : ''}${min}`}\n      </Text> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: '#787878',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(255, 229, 217, 0.33)',\n  },\n  timeValue: {\n    marginVertical: 40,\n    color: '#787878',\n    fontSize: 43,\n  },\n});"]},"metadata":{},"sourceType":"module"}