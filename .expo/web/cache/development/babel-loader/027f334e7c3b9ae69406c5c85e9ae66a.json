{"ast":null,"code":"var _jsxFileName = \"/Users/akhil/SoftwareApps/Meditate/client/SessionComponents/Timer.jsx\";\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SessionContext from \"../Contexts.jsx\";\nimport { CountdownCircleTimer } from 'react-native-countdown-circle-timer';\nexport default function Timer() {\n  var _this = this;\n\n  var _useContext = useContext(SessionContext),\n      time = _useContext.time;\n\n  var minutes = Math.floor(time / 60);\n  var secs = time % 60;\n\n  if (secs < 10) {\n    secs = \"0\" + secs;\n  }\n\n  return React.createElement(CountdownCircleTimer, {\n    isPlaying: true,\n    duration: time,\n    colors: [['#004777', 1]],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, function (_ref) {\n    var remainingTime = _ref.remainingTime,\n        animatedColor = _ref.animatedColor;\n    return React.createElement(Animated.Text, {\n      style: {\n        color: animatedColor\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, remainingTime);\n  });\n}\n;\nvar style = StyleSheet.create({\n  timer: {\n    flex: 1,\n    alignItems: 'center',\n    top: '20%',\n    marginBottom: '5%'\n  },\n  timerText: {\n    color: '#787878',\n    fontSize: 86\n  },\n  subtext: {\n    color: '#787878',\n    fontSize: 24,\n    fontWeight: '500'\n  }\n});","map":{"version":3,"sources":["/Users/akhil/SoftwareApps/Meditate/client/SessionComponents/Timer.jsx"],"names":["React","useState","useContext","SessionContext","CountdownCircleTimer","Timer","time","minutes","Math","floor","secs","remainingTime","animatedColor","color","style","StyleSheet","create","timer","flex","alignItems","top","marginBottom","timerText","fontSize","subtext","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;;;AAEA,OAAOC,cAAP;AACA,SAASC,oBAAT,QAAqC,qCAArC;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,oBAAiBH,UAAU,CAACC,cAAD,CAA3B;AAAA,MAAQG,IAAR,eAAQA,IAAR;;AAEA,MAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,EAAlB,CAAd;AACA,MAAII,IAAI,GAAGJ,IAAI,GAAG,EAAlB;;AACA,MAAII,IAAI,GAAG,EAAX,EAAe;AACbA,IAAAA,IAAI,SAAOA,IAAX;AACD;;AAED,SACE,oBAAC,oBAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,QAAQ,EAAEJ,IAFZ;AAGE,IAAA,MAAM,EAAE,CAAC,CAAC,SAAD,EAAY,CAAZ,CAAD,CAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG;AAAA,QAAGK,aAAH,QAAGA,aAAH;AAAA,QAAkBC,aAAlB,QAAkBA,aAAlB;AAAA,WACC,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAED;AAAT,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,aADH,CADD;AAAA,GALH,CADF;AAoBD;AAAA;AAED,IAAMG,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC9BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,CADD;AAELC,IAAAA,UAAU,EAAE,QAFP;AAGLC,IAAAA,GAAG,EAAE,KAHA;AAILC,IAAAA,YAAY,EAAE;AAJT,GADuB;AAO9BC,EAAAA,SAAS,EAAE;AACTT,IAAAA,KAAK,EAAE,SADE;AAETU,IAAAA,QAAQ,EAAE;AAFD,GAPmB;AAW9BC,EAAAA,OAAO,EAAE;AACPX,IAAAA,KAAK,EAAE,SADA;AAEPU,IAAAA,QAAQ,EAAE,EAFH;AAGPE,IAAAA,UAAU,EAAE;AAHL;AAXqB,CAAlB,CAAd","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport SessionContext from '../Contexts.jsx';\nimport { CountdownCircleTimer } from 'react-native-countdown-circle-timer';\n\nexport default function Timer() {\n  const { time } = useContext(SessionContext);\n\n  let minutes = Math.floor(time / 60);\n  let secs = time % 60;\n  if (secs < 10) {\n    secs = `0${secs}`;\n  }\n\n  return (\n    <CountdownCircleTimer\n      isPlaying\n      duration={time}\n      colors={[['#004777', 1]]}\n    >\n      {({ remainingTime, animatedColor }) => (\n        <Animated.Text style={{ color: animatedColor }}>\n          {remainingTime}\n        </Animated.Text>\n      )}\n    </CountdownCircleTimer>\n\n\n\n    // <View style={style.timer}>\n    //   <Text style={style.timerText}>{minutes}:{secs}</Text>\n    //   <Text style={style.subtext}>minutes</Text>\n    // </View>\n  )\n};\n\nconst style = StyleSheet.create({\n  timer: {\n    flex: 1,\n    alignItems: 'center',\n    top: '20%',\n    marginBottom: '5%'\n  },\n  timerText: {\n    color: '#787878',\n    fontSize: 86,\n  },\n  subtext: {\n    color: '#787878',\n    fontSize: 24,\n    fontWeight: '500',\n  }\n})\n\n"]},"metadata":{},"sourceType":"module"}