{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/akhil/SoftwareApps/Meditate/client/SessionComponents/Timer.jsx\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Constants from 'expo-constants';\nimport { CountdownCircleTimer } from 'react-native-countdown-circle-timer';\nexport default function App() {\n  var _this = this;\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isPlaying = _React$useState2[0],\n      setIsPlaying = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(CountdownCircleTimer, {\n    isPlaying: isPlaying,\n    duration: 10,\n    colors: [['#004777', 0.4], ['#F7B801', 0.4], ['#A30000', 0.2]],\n    onComplete: function onComplete() {\n      return [true];\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, function (_ref) {\n    var remainingTime = _ref.remainingTime,\n        animatedColor = _ref.animatedColor;\n    return React.createElement(Animated.Text, {\n      style: {\n        color: animatedColor,\n        fontSize: 40\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, remainingTime);\n  }), React.createElement(Button, {\n    title: \"Toggle Playing\",\n    onPress: function onPress() {\n      return setIsPlaying(function (prev) {\n        return !prev;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8\n  }\n});","map":{"version":3,"sources":["/Users/akhil/SoftwareApps/Meditate/client/SessionComponents/Timer.jsx"],"names":["React","Constants","CountdownCircleTimer","App","useState","isPlaying","setIsPlaying","styles","container","remainingTime","animatedColor","color","fontSize","prev","StyleSheet","create","flex","justifyContent","alignItems","paddingTop","statusBarHeight","backgroundColor","padding"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,oBAAT,QAAqC,qCAArC;AAGA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,wBAAkCH,KAAK,CAACI,QAAN,CAAe,IAAf,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AACE,IAAA,SAAS,EAAEH,SADb;AAEE,IAAA,QAAQ,EAAE,EAFZ;AAGE,IAAA,MAAM,EAAE,CACN,CAAC,SAAD,EAAY,GAAZ,CADM,EAEN,CAAC,SAAD,EAAY,GAAZ,CAFM,EAGN,CAAC,SAAD,EAAY,GAAZ,CAHM,CAHV;AAQE,IAAA,UAAU,EAAE;AAAA,aAAM,CAAC,IAAD,CAAN;AAAA,KARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUC;AAAA,QAAGI,aAAH,QAAGA,aAAH;AAAA,QAAkBC,aAAlB,QAAkBA,aAAlB;AAAA,WACC,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAED,aAAT;AAAwBE,QAAAA,QAAQ,EAAE;AAAlC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,aADH,CADD;AAAA,GAVD,CADF,EAiBA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gBAAd;AAA+B,IAAA,OAAO,EAAE;AAAA,aAAMH,YAAY,CAAC,UAAAO,IAAI;AAAA,eAAI,CAACA,IAAL;AAAA,OAAL,CAAlB;AAAA,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBA,CADF;AAqBD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,UAAU,EAAElB,SAAS,CAACmB,eAJb;AAKTC,IAAAA,eAAe,EAAE,SALR;AAMTC,IAAAA,OAAO,EAAE;AANA;AADoB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Text, View, StyleSheet, Animated, Button } from 'react-native';\nimport Constants from 'expo-constants';\nimport { CountdownCircleTimer } from 'react-native-countdown-circle-timer';\n\n\nexport default function App() {\n  const [isPlaying, setIsPlaying] = React.useState(true)\n  return (\n    <View style={styles.container}>\n      <CountdownCircleTimer\n        isPlaying={isPlaying}\n        duration={10}\n        colors={[\n          ['#004777', 0.4],\n          ['#F7B801', 0.4],\n          ['#A30000', 0.2],\n        ]}\n        onComplete={() => [true]}\n    >\n      {({ remainingTime, animatedColor }) => (\n        <Animated.Text style={{ color: animatedColor, fontSize: 40 }}>\n          {remainingTime}\n        </Animated.Text>\n      )}\n    </CountdownCircleTimer>\n    <Button title=\"Toggle Playing\" onPress={() => setIsPlaying(prev => !prev)}/>\n  </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n  }\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useContext } from 'react';\n// import { StyleSheet, Text, View } from 'react-native';\n// import SessionContext from '../Contexts.jsx';\n\n// export default function Timer() {\n//   const { time } = useContext(SessionContext);\n\n//   let minutes = Math.floor(time / 60);\n//   let secs = time % 60;\n//   if (secs < 10) {\n//     secs = `0${secs}`;\n//   }\n\n//   return (\n//     <View style={style.timer}>\n//       <Text style={style.timerText}>{minutes}:{secs}</Text>\n//       <Text style={style.subtext}>minutes</Text>\n//     </View>\n//   )\n// };\n\n// const style = StyleSheet.create({\n//   timer: {\n//     flex: 1,\n//     alignItems: 'center',\n//     top: '20%',\n//     marginBottom: '5%'\n//   },\n//   timerText: {\n//     color: '#787878',\n//     fontSize: 86,\n//   },\n//   subtext: {\n//     color: '#787878',\n//     fontSize: 24,\n//     fontWeight: '500',\n//   }\n// })\n\n"]},"metadata":{},"sourceType":"module"}